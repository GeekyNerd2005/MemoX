(()=>{var e=globalThis,t={},n={},o=e.parcelRequirea888;null==o&&((o=function(e){if(e in t)return t[e].exports;if(e in n){var o=n[e];delete n[e];var r={id:e,exports:{}};return t[e]=r,o.call(r.exports,r,r.exports),r.exports}var i=Error("Cannot find module '"+e+"'");throw i.code="MODULE_NOT_FOUND",i}).register=function(e,t){n[e]=t},e.parcelRequirea888=o),(0,o.register)("eYEwQ",function(e,t){(async()=>{let e="",t=new Set;function n(e){if(!e||e.nodeType!==Node.ELEMENT_NODE)return!1;let t=window.getComputedStyle(e);return"0px"!==t.width&&"0px"!==t.height&&"0"!==t.opacity&&"none"!==t.display&&"hidden"!==t.visibility&&e.offsetWidth>0&&e.offsetHeight>0}if("www.youtube.com"===window.location.hostname&&window.location.pathname.includes("/watch")){console.log("Attempting to get YouTube transcript...");try{let t=document.querySelector('ytd-menu-renderer.ytd-video-primary-info-renderer button#button[aria-label="More actions"]');if(t&&n(t)){t.click(),await new Promise(e=>setTimeout(e,500));let e=document.evaluate("//tp-yt-paper-item[contains(@aria-label, 'Show transcript') or contains(., 'Show transcript')]",document,null,XPathResult.FIRST_ORDERED_NODE_TYPE,null).singleNodeValue;e&&n(e)?(e.click(),await new Promise(e=>setTimeout(e,1500))):console.log("Could not find 'Show transcript' menu item in actions menu.")}else console.log("More actions button not found or not visible on YouTube.");let o=document.querySelector("ytd-engagement-panel-section-list-renderer[target-id='engagement-panel-transcript'] #segments-container");if(o&&n(o)){let t=o.querySelectorAll(".segment-text.style-scope.ytd-transcript-segment-renderer");e=Array.from(t).map(e=>e.textContent?.trim()).filter(e=>e&&e.length>0).join(" "),console.log("YouTube transcript extracted. Length:",e.length)}else console.log("Transcript container not found or not visible, falling back to general content.")}catch(e){console.error("Error during YouTube transcript extraction:",e),console.log("Falling back to general content extraction for YouTube page.")}}if(await new Promise(e=>setTimeout(e,500)),!e||e.length<50){console.log("Attempting to get general page content with deduplication and filtering...");let o="",r=!1;for(let e of["article","main","div.main-content","div.article-content","div.post-content","div.entry-content","div#content","div#main","body"]){for(let i of document.querySelectorAll(e))if(n(i)&&"HEADER"!==i.tagName&&"FOOTER"!==i.tagName&&"NAV"!==i.tagName&&"ASIDE"!==i.tagName&&(i.querySelectorAll("p, h1, h2, h3, h4, h5, h6, li, blockquote, dd").forEach(e=>{if(n(e)){let n=e.textContent.trim();(n.length>5||e.tagName.startsWith("H"))&&!t.has(n)&&(t.add(n),o+=n+"\n\n",r=!0)}}),r&&("article"===e||"main"===e)))break;if(r&&("article"===e||"main"===e))break}(!r||o.trim().length<200)&&(console.warn("Could not find sufficient structured main content. Attempting broader text extraction."),o="",t.clear(),document.querySelectorAll("p, h1, h2, h3, h4, h5, h6, li, blockquote, div").forEach(e=>{if(n(e)&&!e.closest('header, footer, nav, aside, .sidebar, #comments, #related-articles, #ads, [role="navigation"]')){let n=e.textContent.trim();n.length>20&&!t.has(n)&&(t.add(n),o+=n+"\n\n")}})),0===(e=o.trim()).length&&(console.warn("No specific content found. Falling back to entire visible body text."),e=document.body.innerText.trim()),console.log("General page content extracted. Length:",(e=e.replace(/\s+/g," ").trim()).length)}console.log(`Final extracted content length: ${e.length} characters.`),0===e.length&&console.warn("[content.js] Warning: Sending empty pageContent to popup. This might cause no summary."),console.log("[content.js] Attempting to send message to background script."),chrome.runtime.sendMessage({type:"PAGE_CONTENT",content:e},e=>{chrome.runtime.lastError?console.error("[content.js] Error sending message to background script:",chrome.runtime.lastError.message):console.log("[content.js] Message sent successfully to background script. Response (if any):",e)})})()}),o("eYEwQ")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
